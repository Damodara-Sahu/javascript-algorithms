{"version":3,"sources":["components/Sidebar.js","algo/sorting/bubble-sort.js","algo/sorting/quick-sort.js","algo/sorting/tasks/find-median.js","components/concepts/Sorting.js","algo/string-manipulation/define-anagrams.js","algo/string-manipulation/making-anagrams.js","algo/string-manipulation/tasks/alternating-characters.js","algo/string-manipulation/tasks/sherlock-valid-string.js","components/concepts/StringManipulation.js","eloquent-tasks/tasks/looping-triangle.js","eloquent-tasks/tasks/fizz-buzz.js","eloquent-tasks/tasks/chessboard.js","eloquent-tasks/CodeSandboxTasks.js","algo/greedy/min-abs-difference.js","algo/greedy/luck-balance.js","components/concepts/GreedyAlgoritms.js","algo/number/power.js","components/concepts/Number.js","algo/array/merge-sorted-arrays.js","algo/array/find-index.js","components/concepts/ArrayAlgorithms.js","components/Main.js","components/SplitSidebarView.js","config/constants.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","className","href","bubbleSort","arr","swap","len","length","i","quickSort","array","pivot","leftArr","rightArr","slice","el","push","findMedian","sortedArr","index","Math","floor","Sorting","id","aria-expanded","aria-labelledby","role","aria-controls","aria-hidden","language","style","docco","toString","defineAnagrams","str1","str2","Error","len1","len2","obj","normalizedStr1","replace","toLowerCase","normalizedStr2","charCodeAt","j","Object","values","every","val","makingAnagrams","obj1","obj2","hasOwnProperty","arr1","arr2","reduce","a","b","alternatingCharacters","s","split","deletions","count","list","value","filter","x","isValid","letters","element","valMax","max","valMin","min","countMax","countMin","Set","StringManipulation","dark","loopingTriangle","symbol","line","console","log","fizzBuzz","n","output","chessboard","size","board","y","minimumAbsoluteDifference","diff","sort","abs","luckBalance","k","contests","luck","lost","GreedyAlgorithms","power","base","exponent","result","Number","correct","guess","round","binarySearch","mergeSortedArrays","findIndex","searchQuery","ArrayAlgorithms","Main","SplitSidebarView","props","width","window","innerWidth","state","sideBarSize","getSize","sideBarGrowing","handleDrag","bind","onDragFinished","onResizerDoubleClick","windowWidth","this","setState","event","children","onChange","resizerStyle","minSize","maxSize","Component","openTarget","hash","location","substring","detail","document","getElementById","tagName","open","App","addEventListener","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3388bd6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './sidebar.css';\n\nfunction Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <a href=\"/\" className=\"logo\">Algo</a>\n      <nav>\n        <ul className=\"list\">\n        <li className=\"item\">\n            <header className=\"title\">Number</header>\n            <ul className=\"subList\">\n              <li><a href=\"#number-power\">power</a></li>\n            </ul>\n          </li>\n\n          <li className=\"item\">\n            <header className=\"title\">Arrays</header>\n            <ul className=\"subList\">\n              <li><a href=\"#is-sorted\">Merge two sorted arrays</a></li>\n              <li><a href=\"#is-find-index\">Find an index for element in array</a></li>\n            </ul>\n          </li>\n\n          <li className=\"item\">\n            <header className=\"title\">Sorting</header>\n            <ul className=\"subList\">\n              <li><a href=\"#bubble-sort\">Bubble sort</a></li>\n              <li><a href=\"#quick-sort\">Quick sort</a></li>\n              {/* other tasks */}\n              <li><a href=\"#find-median\">Find a median</a></li>\n            </ul>\n          </li>\n\n          <li className=\"item\">\n            <header className=\"title\">String Manipulation</header>\n            <ul className=\"subList\">\n              <li><a href=\"#define-anagrams\">Define anagrams</a></li>\n              <li><a href=\"#making-anagrams\">Making anagrams</a></li>\n            </ul>\n          </li>\n\n          <li className=\"item\">\n            <header className=\"title\">Greedy Algorithms</header>\n            <ul className=\"subList\">\n              <li><a href=\"#greedy-min-absolute-difference\">Minimum absolute difference</a></li>\n              <li><a href=\"#greedy-luck-balance\">Luck balance</a></li>\n            </ul>\n          </li>\n\n          <li className=\"item\">\n            <header className=\"title\">\n              Tasks from Eloquent JavaScript\n            </header>\n            <ul className=\"subList\">\n              <li><a href=\"#eloquent-looping-triangle\">Looping a triangle</a></li>\n              <li><a href=\"#eloquent-fizz-buzz\">Fizz buzz</a></li>\n              <li><a href=\"#eloquent-chessboard\">Chessboard</a></li>\n            </ul>\n          </li>\n\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","function bubbleSort(arr) {\n  const len = arr.length;\n  //let count = 0;\n\n  let swap;\n\n  do {\n    swap = false;\n    for (let i = 0; i < len-1; i++) {\n      if (arr[i] > arr[i+1]) {\n        [ arr[i], arr[i+1] ] =[ arr[i+1], arr[i] ];\n        swap = true;\n        //count += 1;\n      }\n    }\n  } while (swap)\n\n  //console.log('count', count);\n  return arr;\n}\n\nexport { bubbleSort }\n","function quickSort(array) {\n  const len = array.length;\n\n  if (len <= 1) {\n    return array;\n  }\n\n  const pivot = array[len - 1];\n  const leftArr = [];\n  const rightArr = [];\n\n  for (const el of array.slice(0, len - 1)) {\n    // exclude last element, because it's our pivot\n    el < pivot ? leftArr.push(el) : rightArr.push(el)\n  }\n\n  return [...quickSort(leftArr), pivot, ...quickSort(rightArr)]\n}\n\nexport { quickSort };\n","function quickSort(arr) {\n  const len = arr.length;\n  if (len <= 1) return arr;\n\n  let leftArr = [];\n  let rightArr = [];\n  let pivot = arr[0];\n\n  for (const el of arr.slice(1, len)) {\n    (el < pivot) ? leftArr.push(el) : rightArr.push(el)\n  }\n\n  const merged = [...quickSort(leftArr), pivot, ...quickSort(rightArr)];\n  //console.log(merged.join(' '));\n  return merged;\n}\n\nfunction findMedian(arr) {\n  const len = arr.length;\n  const sortedArr = quickSort(arr);\n\n  let median;\n  if (len === 0) return median = 0;\n\n  let index = 0;\n\n  if (len % 2 === 0) {\n    index = len / 2;\n    median = (sortedArr[index] + sortedArr[index - 1]) / 2\n  } else {\n    index = Math.floor(len / 2);\n    median = sortedArr[index]\n  }\n\n  return median\n}\n\nfunction findMedianVariant1(arr) {\n  const n = arr.length;\n  arr.sort((a, b) => a - b);\n  return arr[(n - 1)/2];\n}\n\n\nexport { findMedian, findMedianVariant1 }\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { bubbleSort } from '../../algo/sorting/bubble-sort';\nimport { quickSort } from '../../algo/sorting/quick-sort';\nimport { findMedian } from '../../algo/sorting/tasks/find-median';\n\nfunction Sorting() {\n  return (\n    <div className=\"sorting\">\n      <h2>Sorting</h2>\n\n      <ul>\n        <li>\n          <details\n            className=\"details\"\n            id=\"bubble-sort\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>bubble sort</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <p>is a method for sorting arrays by comparing each array element to the element behind it</p>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {bubbleSort.toString()}\n              </SyntaxHighlighter>\n              <p>\n              Unfortunately bubble sort is pretty slow\n              worst scenario a run time is O(n^2),\n              space is O(1)\n              </p>\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"quick-sort\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>implement quick sort</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <p>first pick a random number - pivot</p>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {quickSort.toString()}\n              </SyntaxHighlighter>\n              <p>\n                Quick sort’s worst case is O(n2) but that can be avoided\n                if we pick random pivot point (choose middle one), so that way it’s big O is O(nlogn).\n                It’s space complexity is O(logn).\n              </p>\n            </div>\n          </details>\n        </li>\n\n        {/* other tasks */}\n        <li>\n          <details\n            className=\"details\"\n            id=\"find-median\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>Find a median</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <p>\n                The median of a list of numbers is essentially it's middle element after sorting.\n                The same number of elements occur after it as before.\n              </p>\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {findMedian.toString()}\n              </SyntaxHighlighter>\n\n            </div>\n          </details>\n        </li>\n      </ul>\n  </div>\n  );\n}\n\nexport default Sorting;\n","function defineAnagrams(str1, str2) {\n  if (typeof str1 !== 'string' || typeof str2 !== 'string') {\n    throw new Error('isAnagram requires two strings to be passed');\n  }\n\n  if ( str1 === '' || str2 === '') return 'empty strings';\n\n  const len1 = str1.length;\n  const len2 = str2.length;\n  let obj = {}; // hash\n\n  if (len1 !== len2) return false;\n\n  if (len1 === len2) {\n    const normalizedStr1 = str1.replace(/[^A-Za-z]+/g, '').toLowerCase();\n    const normalizedStr2 = str2.replace(/[^A-Za-z]+/g, '').toLowerCase();\n\n    for (let i = 0; i < len1; i++) {\n      const index = normalizedStr1.charCodeAt(i)-97;\n      obj[index] = (obj[index] || 0) + 1;\n     }\n\n    for (let j = 0; j < len2; j++) {\n      const index = normalizedStr2.charCodeAt(j)-97;\n      if (!obj[index]) return false;\n      else {\n        obj[index]--;\n      }\n    }\n\n    const isStringAnagram = Object.values(obj).every(val => val === 0);\n    return isStringAnagram;\n  }\n}\n\nexport { defineAnagrams }\n","/**\n * Given two strings, a and b, that may or may not be of the same length,\n * determine the minimum number of character deletions required to make a and b anagrams.\n * Any characters can be deleted from either of the strings.\n * For example, if a = cde and b = dcf, we can delete e from string a and\n * f from string b so that both remaining strings are  and  which are anagrams.\n */\nfunction makingAnagrams(str1, str2) {\n  const len1 = str1.length\n  const len2 = str2.length;\n  const obj1 = {};\n  const obj2 = {};\n\n  for (let i=0; i < len1; i++) {\n    obj1[str1[i]] = obj1[str1[i]] ? obj1[str1[i]] + 1 : 1\n  }\n\n  for (let j=0; j < len2; j++) {\n    obj2[str2[j]] = obj2[str2[j]] ? obj2[str2[j]] + 1 : 1\n  }\n\n  for (let i =0; i<len1; i++) {\n    if (obj2.hasOwnProperty(str1[i])) {\n      obj2[str1[i]]--;\n      if (obj2[str1[i]] === 0) {\n        delete obj2[str1[i]]\n      }\n    }\n  }\n\n  for (let j=0; j< len2; j++) {\n    if (obj1.hasOwnProperty(str2[j])) {\n      obj1[str2[j]]--;\n      if (obj1[str2[j]] === 0) {\n        delete obj1[str2[j]];\n      }\n    }\n  }\n\n  const arr1 = Object.values(obj1);\n  const arr2 = Object.values(obj2);\n  const sum1 = ((arr1.length > 0) && arr1.reduce((a,b) => a + b)) || 0;\n  const sum2 = ((arr2.length > 0) && arr2.reduce((a,b) => a+b)) || 0;\n  const sum = sum1 + sum2;\n\n  return sum;\n}\n\nexport { makingAnagrams }\n","/**\n * You are given a string containing characters A and B only.\n * Your task is to change it into a string such that there are no matching adjacent characters.\n *  To do this, you are allowed to delete zero or more characters in the string.\n *\n*/\n\nfunction alternatingCharacters(s) {\n  let arr = s.split('');\n  const len = arr.length - 1;\n  let deletions = 0;\n\n\n  for (let index = 0; index < len; index++) {\n    if (arr[index] === arr[index + 1]) {\n      deletions++;\n    }\n  }\n\n  return deletions;\n}\n\nfunction alternatingCharactersVariant1(s) {\n  let deletions = 0;\n\n  s.split('').map((char, i) => {\n    if (char[i] === char[i+1]) deletions++;\n    return deletions;\n  })\n}\n\nexport { alternatingCharacters, alternatingCharactersVariant1 }\n","/**\n * Sherlock considers a string to be valid if all characters of the string\n * appear the same number of times.\n *\n*/\nexport const count = (list, value) => {\n  return list.filter((x) => x === value).length\n}\n\nfunction isValid(s) {\n  const arr = s.split('');\n  const len = arr.length;\n  let letters = {};\n\n  for (let i = 0; i < len; i++) {\n    const element = arr[i];\n    letters[element] = (letters[element] || 0) + 1;\n  }\n\n  const values = Object.values(letters);\n  const valMax = Math.max(...values)\n  const valMin = Math.min(...values);\n\n  const countMax = count(values, valMax);\n  const countMin = count(values, valMin);\n  let isValid = false;\n\n  if (\n    (valMax === valMin) ||\n    (valMax - valMin === 1 && countMax === 1) ||\n    (valMin === 1 && countMin === 1 && [...new Set(values)].length === 2)\n  ) {\n    isValid = true\n  }\n\n  return isValid === true ? 'Yes' : 'No';\n}\n\nfunction isValidVariant1(s) {\n  let h = {};\n  let res = \"Yes\";\n  let arr = [];\n  let count = 0;\n\n  for (let char of s) {\n    h[char] = h[char]+1 || 1; // if any char appear more than once, value will increament;\n  }\n\n  Object.values(h).map(v => {\n    arr.push(v);\n    // if any value is different than first value;\n    if( v !== arr[0] ){\n      count++;  // count how many values are different\n      if( (v > arr[0]) && (v-1 !== arr[0]) ){\n        res = \"No\";\n      } else if ( (v < arr[0]) &&  (v !== (arr[0]-1)) ){\n        console.log(v, arr[0])\n        res = \"Yes\"\n      }\n    }\n  })\n\n  if(count > 1) res = \"NO\"; // if more than one values are different\n  if(count === 1) res = \"YES\"; // if only one value is different\n  return res;\n}\n\nexport { isValid, isValidVariant1 }\n\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco, dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { defineAnagrams } from '../../algo/string-manipulation/define-anagrams';\nimport { makingAnagrams } from '../../algo/string-manipulation/making-anagrams';\nimport { alternatingCharacters } from '../../algo/string-manipulation/tasks/alternating-characters';\nimport { isValid } from '../../algo/string-manipulation/tasks/sherlock-valid-string';\n\nexport default function StringManipulation() {\n  return (\n    <div className=\"sorting\">\n      <h2>String Manipulation</h2>\n\n      <ul>\n        <li>\n          <details\n            className=\"details\"\n            id=\"define-anagrams\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>define anagrams</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <p>\n                Anagrams are 2 words meaning anagrams with the same characters but in different order\n                (same exact characters but order doesn’t matter).\n              </p>\n              <ul className=\"unorderedList\">\n                <li>Define hash</li>\n                <li>Increase the count for the first string.</li>\n                <li>Decrease the count for the second string. If a letter in string 2 is not found in the hash then return false.</li>\n                <li>else return true</li>\n              </ul>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {defineAnagrams.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"making-anagrams\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>making anagrams</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <p>\n                Given two strings, a and b, that may or may not be of the same length,\n                determine the minimum number of character deletions required to make a and b anagrams.\n                Any characters can be deleted from either of the strings.\n              </p>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {makingAnagrams.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"string-manipulation-tasks\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              Different tasks related to String Manipulation\n            </summary>\n\n            <details\n              className=\"details\"\n              id=\"alternating-characters\"\n              aria-expanded=\"false\"\n              aria-labelledby=\"label\">\n\n              <summary role=\"button\" aria-controls=\"content\">\n                <span className=\"question\">Alternating characters</span>\n              </summary>\n\n              <div aria-hidden=\"true\">\n                <h3 className=\"title\">Solution:</h3>\n                <p>\n                  Given two strings, a and b, that may or may not be of the same length,\n                  determine the minimum number of character deletions required to make a and b anagrams.\n                  Any characters can be deleted from either of the strings.\n                </p>\n                <SyntaxHighlighter\n                  language=\"javascript\"\n                  style={dark}\n                >\n                  {alternatingCharacters.toString()}\n                </SyntaxHighlighter>\n              </div>\n            </details>\n\n            <details\n              className=\"details\"\n              id=\"sherlock-valid-string\"\n              aria-expanded=\"false\"\n              aria-labelledby=\"label\">\n              <summary role=\"button\" aria-controls=\"content\">\n                <span className=\"question\">Sherlock valid string</span>\n              </summary>\n\n              <div aria-hidden=\"true\">\n                <h3 className=\"title\">Solution:</h3>\n                <p>\n                Sherlock considers a string to be valid if all characters of the string\n                appear the same number of times and one symbol could be deleted.\n                </p>\n                <SyntaxHighlighter\n                  language=\"javascript\"\n                  style={dark}\n                >\n                  {isValid.toString()}\n                </SyntaxHighlighter>\n              </div>\n            </details>\n\n          </details>\n        </li>\n      </ul>\n  </div>\n  );\n}\n","/**\n  *   Looping a triangle\n  *   Write a loop that makes seven calls to console.log to output the following triangle:\n  *   #\n  *   ##\n  *   ###\n  *   ####\n  *   #####\n  *   ######\n  *   #######\n */\n function loopingTriangle(len, symbol='#') {\n   for (let line = symbol; line.length < len + 1; line += symbol) {\n     console.log(line)\n   }\n }\n\n export { loopingTriangle }\n","/**\n * Create a for loop that iterates up to 100 while outputting \"fizz\" at multiples of 3, \"buzz\" at multiples of 5 and \"fizzbuzz\" at multiples of 3 and 5\n *\n * 1\n * 2\n * 'Fizz'\n * 4\n * 'Buzz'\n * ..\n * @param {for loop numbers}\n * @return {or number or string}\n */\n\nconst fizzBuzz = () => {\n  for (let n = 1; n <= 100; n++) {\n    let output = \"\";\n    if (n % 3 === 0)\n      output += \"Fizz\";\n    if (n % 5 === 0)\n      output += \"Buzz\";\n\n    console.log(output || n);\n  }\n};\n\nexport { fizzBuzz }\n","/**\n *\n * Write a program that creates a string that represents an 8×8 grid,\n * using newline characters to separate lines.\n * At each position of the grid there is either a space or a \"#\" character.\n * The characters should form a chessboard.\n * Passing this string to console.log should show something like this:\n *\n *   # # # #\n *   # # # #\n *   # # # #\n *   # # # #\n *   # # # #\n *   # # # #\n *   # # # #\n *   # # # #\n *\n*/\nexport function chessboard(size=8) {\n  let board = '';\n\n  // lines\n  for (let y = 0; y < size; y++) {\n    // characters\n    for (let x = 0; x < size; x++) {\n      if ( (x+y) % 2 === 0) {\n        board += ' ';\n      } else {\n        board += '#'\n      }\n    }\n    board += '\\n';\n  }\n\n  console.log(board)\n}\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { loopingTriangle } from './tasks/looping-triangle';\nimport { fizzBuzz } from './tasks/fizz-buzz';\nimport { chessboard } from './tasks/chessboard';\n\nexport default function StringManipulation() {\n  return (\n    <div className=\"sorting\">\n      <h2>\n        Code Sandbox <br />\n        <a href=\"https://eloquentjavascript.net/\">Eloquent JavaScript</a>\n      </h2>\n\n      <ul>\n        <li>\n          <details\n            className=\"details\"\n            id=\"eloquent-looping-triangle\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>Looping triangle</strong>\n                <p>Write a loop that makes seven calls to console.log to output the triangle</p>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {loopingTriangle.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"eloquent-fizz-buzz\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>\n                  fizzbuzz\n                </strong>\n                <p>\n                  Create a for loop that iterates up to 100 while outputting \"fizz\" at multiples of 3,\n                  \"buzz\" at multiples of 5 and \"fizzbuzz\" at multiples of 3 and 5\n                </p>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <span className=\"complexity\">\n                runtime - O(n)\n              </span>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {fizzBuzz.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"eloquent-fizz-buzz\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>\n                  Chessboard\n                </strong>\n                <p>\n                  Write a program that creates a string that represents an 8×8 grid, using newline characters\n                  to separate lines. At each position of the grid there is either a space or a \"#\" character.\n                  The characters should form a chessboard.\n                </p>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <span className=\"complexity\">complexity - n2</span>\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                { chessboard.toString() }\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n      </ul>\n\n  </div>\n  );\n}\n","/**\n *\n * Consider an array of integers, arr = [arr[0], ... , arr[n-1]].\n * We define the absolute difference between two elements a[i] and a[j] (where i!=j),\n * to be the absolute value of a[i] - a[j].\n * Given an array of integers,\n * find and print the minimum absolute difference between any two elements in the array.\n * For example, given the array arr = [-2,2,4]\n * we can create  pairs of numbers: [-2,2], [-2,4] and [2,4].\n * The absolute differences for these pairs are\n * |-2 -2| = 4,\n * |-2-4| = 6 and\n * |2-4| = 2.\n * The minimum absolute difference is 2.\n *\n * 1) sort\n * 2) consider diff between the first pair as min\n * 3) compare all \"consecutive pair min\" with the one in step2 to get the least min.\n *\n * */\nfunction minimumAbsoluteDifference(arr) {\n  const len = arr.length;\n  const sortedArr = arr.sort((a, b) => a - b); // solution doesn't work without sort\n\n  let min = Math.abs(sortedArr[0] - sortedArr[1]),\n    diff;\n\n  for (let i = 2; i < len; i++) {\n    diff = Math.abs(sortedArr[i] - sortedArr[i-1]);\n    if (diff < min) {\n      min = diff;\n    }\n  }\n\n  return min;\n}\n\nexport { minimumAbsoluteDifference }\n\n","/**\n * More description on hackerrunk greedy algorithms\n * The description would be clearer if it read \"L is the amount of luck\n * that can be gained by losing the contest.\"\n * She believes that luck is spent on wins and earned from losses.\n*/\nfunction luckBalance(k, contests) {\n  // sort descending, don't modify the original array\n  const arr = contests\n    .slice()\n    .sort((a, b) => b[0] - a[0]);\n\n  const len = arr.length;\n  let luck = 0,\n    lost = k;\n\n  for (let i = 0; i < len; i++) {\n      const [value, important] = arr[i];\n      // increment if lost, decrement if won\n      if (important) {\n          luck += lost > 0 ? value : -value;\n          lost -= 1;\n          continue;\n      }\n      // non-important are always lost\n      luck += value;\n  }\n\n  return luck;\n}\n\nexport { luckBalance }\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { minimumAbsoluteDifference } from '../../algo/greedy/min-abs-difference';\nimport { luckBalance } from '../../algo/greedy/luck-balance';\n\n\nexport default function GreedyAlgorithms() {\n  return (\n    <div className=\"sorting\">\n      <h2>Greedy Algorithms</h2>\n\n      <ul>\n        <li>\n          <details\n            className=\"details\"\n            id=\"greedy-min-absolute-difference\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>Minimum Absolute Difference in an Array</strong>\n                <p>\n                Consider an array of integers, arr = [arr[0], ... , arr[n-1]].\n                We define the absolute difference between two elements a[i] and a[j] (where i!=j),\n                to be the absolute value of a[i] - a[j].\n                Given an array of integers,\n                find and print the minimum absolute difference between any two elements in the array.\n                </p>\n                <ul className=\"unorderedList\">\n                  <li>sort</li>\n                  <li>consider diff between the first pair as min</li>\n                  <li>compare all \"consecutive pair min\" with the one in step2 to get the least min.</li>\n                </ul>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {minimumAbsoluteDifference.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"greedy-luck-balance\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>Luck Balance</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {luckBalance.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n      </ul>\n\n  </div>\n  );\n}\n","//export { findIndex } from '../array/find-index';\n\nfunction power(base, exponent) {\n  let result = 1;\n\n  for (let count = 0; count < exponent; count++) {\n    result *= base;\n  }\n\n  return result\n}\n\nexport { power }\n\n\n// todo sorted arr\nfunction binarySearch(arr, correct) {\n  const len = arr.length;\n  // index\n  let min = 1;\n  let max = len - 1;\n\n\n  let guessIndex = Math.round((max - min)/2);\n  //debugger;\n  let guess = arr[guessIndex]\n\n\n  if (guess === correct) {\n    console.log('guess', guess)\n    return guess\n  }\n\n  //debugger\n  // index\n  if (guess < correct) {\n    //min = findIndex(arr, guess)\n  } else {\n    max = guess\n  }\n\n  console.log('guess', guess)\n  return guess;\n}\n\n// first 25 prime numbers\n//const a = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\nconst a = [1,2,3,4,5]\n//binarySearch(a, 3);\n\n// task\n// [5,6,8,11]\n\nexport { binarySearch }\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { power, binarySearch } from '../../algo/number/power';\n\n\nexport default function Number() {\n  return (\n    <div className=\"number\">\n      <h2>Number</h2>\n\n      <ul>\n        <li>\n          <details\n            className=\"details\"\n            id=\"number-power\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>Write a Power function</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n              {binarySearch([1,2,3,4,5], 2)}\n              {/* {binarySearch([1,3,4,5,6,9], 3)} */}\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {power.toString()}\n              </SyntaxHighlighter>\n            </div>\n          </details>\n        </li>\n      </ul>\n\n  </div>\n  );\n}\n","/**\n * Write a function which merges two sorted arrays of integers\n * and prints result\n * runtime O(n)\n *\n * @param {array, array}\n * @return {array} - sorted\n */\n\nconst mergeSortedArrays = (arr1, arr2) => {\n  let i = 0, // initial index for the first array\n    j = 0, // initial index for the second array,\n    result = [];\n\n  const len1 = arr1.length,\n    len2 = arr2.length;\n\n  while (i < len1 && j < len2 ) {\n    if (arr1[i] < arr2[j]) {\n      result.push(arr1[i]);\n      i++;\n    } else {\n      result.push((arr2[j]));\n      j++;\n    }\n  }\n\n  if (i < len1) {\n    result = [...result, ...arr1.slice(i)];\n  }\n\n  if (j < len2) {\n    result = [...result, ...arr2.slice(j)];\n  }\n\n  return result;\n};\n\n// other solution but also with a loop\nconst mergeSortedArrays1 = (arr1, arr2) => {\n    let i = 1,\n        j = 1,\n        firstArr1 = arr1[0],\n        firstArr2 = arr2[0],\n        merged = [];\n\n    const len1 = arr1.length,\n        len2 = arr2.length;\n\n    // case if one array is empty\n    if (len1 === 0) {\n        return arr2;\n    }\n    if (len2 === 0) {\n        return arr1;\n    }\n\n    // if firstArr1 or firstArr2 exists we will insert to merged array\n    // will go inside while loop\n    // to insert: firstArr1 exists and firstArr2 doesn't exists\n    // or both exists and firstArr1 < firstArr2\n    // this is the critical part of the example\n    while(firstArr1 || firstArr2) {\n        if ( (firstArr1 && !firstArr2) || firstArr1 < firstArr2 ) {\n            merged.push(firstArr1);\n            firstArr1 = arr1[i++];\n        } else {\n            merged.push(firstArr2);\n            firstArr2 = arr2[j++];\n        }\n    }\n\n    return merged;\n};\n\nexport { mergeSortedArrays, mergeSortedArrays1  };\n","/**\n * Linear Search (array a, value x)\n *\n * Algorithm:\n * Step 1: Set i to 1\n * Step 2: if i > n then go to step 7\n * Step 3: if a[i] = x then go to step 6\n * Step 4: Set i to i + 1\n * Step 5: Go to Step 2\n * Step 6: Print Element x Found at index i and go to step 8\n * Step 7: Print element not found\n * Step 8: Exit\n *\n * Characteristics:\n * The worst case performance scenario for a linear search is that\n * it needs to loop through the entire collection;\n * either because the item is the last one, or because the item isn't found.\n * In other words, if you have N items in your collection,\n * the worst case scenario to find an item is N iterations.\n * This is known as runtime O(n) using the Big O Notation.\n * The speed of search grows linearly with the number of items within your collection.\n *\n * @param {array, number}\n * @return {number | undefined}\n */\n\nfunction findIndex(arr, searchQuery) {\n  const len = arr.length;\n\n  for (let index = 0; index < len; index++) {\n    const element = arr[index];\n    if (element === searchQuery) {\n      return index\n    } else return undefined\n  }\n}\n\nexport { findIndex }\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { mergeSortedArrays } from '../../algo/array/merge-sorted-arrays';\nimport { findIndex } from '../../algo/array/find-index';\n\nexport default function ArrayAlgorithms() {\n  return (\n    <div className=\"sorting\">\n      <h2>Array</h2>\n\n      <ul>\n        <li>\n          <details\n            className=\"details\"\n            id=\"is-sorted\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>merge two sorted arrays.</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {mergeSortedArrays.toString()}\n              </SyntaxHighlighter>\n              runtime is O(n)\n            </div>\n          </details>\n        </li>\n\n        <li>\n          <details\n            className=\"details\"\n            id=\"is-find-index\"\n            aria-expanded=\"false\"\n            aria-labelledby=\"label\">\n            <summary role=\"button\" aria-controls=\"content\">\n              <span className=\"question\">\n                Question:&nbsp;\n                <strong>find an index of element in array</strong>\n              </span>\n            </summary>\n\n            <div aria-hidden=\"true\">\n              <h3 className=\"title\">Solution:</h3>\n\n              <SyntaxHighlighter\n                language=\"javascript\"\n                style={docco}\n              >\n                {findIndex.toString()}\n              </SyntaxHighlighter>\n              runtime is O(n)\n            </div>\n          </details>\n        </li>\n      </ul>\n  </div>\n  );\n}\n","import React from 'react';\n\nimport Sorting from './concepts/Sorting';\nimport StringManipulation from './concepts/StringManipulation';\nimport CodeSandboxTasks from '../eloquent-tasks/CodeSandboxTasks';\nimport GreedyAlgorithms from './concepts/GreedyAlgoritms';\nimport Number from './concepts/Number';\nimport ArrayAlgorithms from './concepts/ArrayAlgorithms';\n\nimport './main.css';\n\nfunction Main() {\n  return (\n    <div className=\"main\">\n      <div className=\"wrapper\">\n        <Number />\n        <ArrayAlgorithms />\n        <Sorting />\n        <StringManipulation />\n        <GreedyAlgorithms />\n        <CodeSandboxTasks />\n      </div>\n  </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Component } from 'react';\n//import { boundMethod } from 'autobind-decorator';\nimport SplitPane from 'react-split-pane';\nimport PropTypes from 'prop-types';\nimport { MOBILE_DEVICE, MINSIZE, EXPANDEDSIZE, THRESHOLDSIZE } from './../config/constants';\n\nimport './resizer.css';\n\nconst propTypes = {\n  children: PropTypes.any\n};\n\nexport default class SplitSidebarView extends Component {\n  constructor (props) {\n    super(props);\n\n    const width = window.innerWidth;\n    this.state = {\n      sideBarSize: this.getSize(width),\n      sideBarGrowing: false\n    };\n\n    this.handleDrag = this.handleDrag.bind(this);\n    this.onDragFinished = this.onDragFinished.bind(this);\n    this.onResizerDoubleClick = this.onResizerDoubleClick.bind(this);\n  }\n\n  getSize(windowWidth) {\n    const minCollapsedWidth = MOBILE_DEVICE; // tablet/mobile devices\n    return windowWidth >= minCollapsedWidth ? EXPANDEDSIZE : MINSIZE;\n  }\n\n  handleDrag(size) {\n    if (size !== this.state.sideBarSize) {\n      this.setState({\n        sideBarSize: size,\n        sideBarGrowing: this.state.sideBarSize < size\n      });\n    }\n  }\n\n  onDragFinished() {\n    this.setState({\n      sideBarSize: this.state.sideBarGrowing ? EXPANDEDSIZE : MINSIZE\n    });\n  }\n\n  onResizerDoubleClick(event) {\n    this.setState({\n      sideBarSize: this.state.sideBarSize === MINSIZE ? EXPANDEDSIZE : MINSIZE\n    });\n  }\n\n  render() {\n    const { sideBarSize } = this.state;\n    const { children } = this.props;\n\n    return (\n      <SplitPane\n        className={sideBarSize < THRESHOLDSIZE ? 'sidebarShortVersion' : null}\n        onChange={this.handleDrag}\n        onDragFinished={this.onDragFinished}\n        onResizerDoubleClick={this.onResizerDoubleClick}\n        resizerStyle={{ width: '0' }}\n        split=\"vertical\"\n        minSize={MINSIZE}\n        maxSize={EXPANDEDSIZE}\n        size={sideBarSize}>\n        { children }\n      </SplitPane>\n    );\n  }\n}\n\nSplitSidebarView.propTypes = propTypes;\n","// screen width\nexport const DESKTOP_DEVICE = 1440; // mac 13 inches\nexport const TABLET_DEVICE = 1024;\nexport const MOBILE_DEVICE = 767;\n\n\n// sidebar\nexport const MINSIZE = 67;\nexport const EXPANDEDSIZE = 250;\nexport const THRESHOLDSIZE = (MINSIZE + EXPANDEDSIZE) / 2;\n","import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Main from './components/Main';\nimport SplitSidebarView from './components/SplitSidebarView';\n\nimport './App.css';\n\nfunction openTarget() {\n  let hash = location.hash.substring(1);  // eslint-disable-line\n\n  if (hash) {\n    var detail = document.getElementById(hash);\n  }\n\n  if (detail && detail.tagName.toLowerCase() === 'details') {\n    detail.open === true ?  detail.open = false : detail.open = true\n  }\n}\n\nclass App extends Component {\n  state = {\n\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', openTarget);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SplitSidebarView>\n          <Sidebar className=\"sidebar\" />\n          <div className=\"rightPart\">\n              <header className=\"App-header\">\n                Computer Science Algorithms by Javascript\n              </header>\n              <Main />\n          </div>\n        </SplitSidebarView>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}